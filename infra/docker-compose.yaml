services:
  db:
    image: postgres:17-alpine
    container_name: db
    restart: unless-stopped
    volumes:
      - data_value:/var/lib/postgresql/data/
    environment:
      LANG: "ru_RU.UTF-8"
      POSTGRES_INITDB_ARGS: "--locale-provider=icu --icu-locale=ru-RU"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 30s
      timeout: 10s
      retries: 5
    expose:
      - "5432"
    env_file:
      - ../.env


  backend:
    build:
      context: ..
      dockerfile: infra/Dockerfile
    container_name: backend
    command: >
      bash -c "python manage.py migrate
      && python manage.py collectstatic --noinput
      && gunicorn backend.wsgi:application --bind 0:8000"
    restart: unless-stopped
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
      - ../.data/logs/:/app/.data/logs/
    expose:
      - "8000"
    env_file:
      - ../.env
    depends_on:
      - db
    image: wallet-backend-test:latest


  nginx:
    image: nginx:1.28-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    depends_on:
      - backend

  alloy:
    image: grafana/alloy:latest
    ports:
     - 12345:12345
     - 4317:4317
     - 4318:4318
    volumes:
     - ./alloy/config.alloy:/etc/alloy/config.alloy
     - /var/run/docker.sock:/var/run/docker.sock
    command: run --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data /etc/alloy/config.alloy

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki/config.yaml:/etc/loki/local-config.yaml

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/django.rules:/etc/prometheus/django.rules
      - prometheusdata:/prometheus

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - ./grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - grafanadata:/var/lib/grafana

volumes:
  static_value:
  media_value:
  data_value:
  grafanadata:
  prometheusdata:
